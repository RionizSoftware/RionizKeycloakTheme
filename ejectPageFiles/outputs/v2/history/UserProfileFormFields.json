[
  {
    "tags": [
      "UserProfileFormFields_Fragment_1\""
    ],
    "historyStates": [
      {
        "tag": "Fragment",
        "currentIndex": "0",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_Fragment_1\"",
          "key": "key={attribute.name}"
        }
      },
      {
        "tag": "Fragment",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_Fragment_1\"",
          "key": "key={attribute.name}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_GroupLabel_1\""
    ],
    "historyStates": [
      {
        "tag": "GroupLabel",
        "currentIndex": "1",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_GroupLabel_1\"",
          "attribute": "attribute={attribute}",
          "groupNameRef": "groupNameRef={groupNameRef}",
          "i18n": "i18n={i18n}",
          "kcClsx": "kcClsx={kcClsx}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_BeforeField_1\""
    ],
    "historyStates": [
      {
        "tag": "BeforeField",
        "currentIndex": "2",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_BeforeField_1\"",
          "attribute": "attribute={attribute}",
          "dispatchFormAction": "dispatchFormAction={dispatchFormAction}",
          "displayableErrors": "displayableErrors={displayableErrors}",
          "valueOrValues": "valueOrValues={valueOrValues}",
          "kcClsx": "kcClsx={kcClsx}",
          "i18n": "i18n={i18n}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_1\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "3",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_1\"",
          "className": "className={kcClsx(\"kcFormGroupClass\")}",
          "style": "style={{\n                    display: attribute.name === \"password-confirm\" && !doMakeUserConfirmPassword ? \"none\" : undefined\n                }}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_1\"",
          "style": "style={{\n                    display: attribute.name === \"password-confirm\" && !doMakeUserConfirmPassword ? \"none\" : undefined\n                }}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_1\"",
          "style": "style={{\n                    display: attribute.name === \"password-confirm\" && !doMakeUserConfirmPassword ? \"none\" : undefined\n                }}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_2\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "4",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_2\"",
          "className": "className={kcClsx(\"kcLabelWrapperClass\")}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_2\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_2\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_label_1\""
    ],
    "historyStates": [
      {
        "tag": "label",
        "currentIndex": "5",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_label_1\"",
          "htmlFor": "htmlFor={attribute.name}",
          "className": "className={kcClsx(\"kcLabelClass\")}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_label_1\"",
          "htmlFor": "htmlFor={attribute.name}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_label_1\"",
          "htmlFor": "htmlFor={attribute.name}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_3\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "6",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_3\"",
          "className": "className={kcClsx(\"kcInputWrapperClass\")}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_3\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_3\""
        }
      }
    ]
  },
  {
    "tags": [
      "{`form-help-text-before-${attribute.name}`}"
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "7",
        "operation": "Loaded",
        "props": {
          "className": "className={kcClsx(\"kcInputHelperTextBeforeClass\")}",
          "id": "id={`form-help-text-before-${attribute.name}`}",
          "aria-live": "aria-live=\"polite\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`form-help-text-before-${attribute.name}`}",
          "aria-live": "aria-live=\"polite\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id={`form-help-text-before-${attribute.name}`}",
          "aria-live": "aria-live=\"polite\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_InputFieldByType_1\""
    ],
    "historyStates": [
      {
        "tag": "InputFieldByType",
        "currentIndex": "8",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_InputFieldByType_1\"",
          "attribute": "attribute={attribute}",
          "valueOrValues": "valueOrValues={valueOrValues}",
          "displayableErrors": "displayableErrors={displayableErrors}",
          "dispatchFormAction": "dispatchFormAction={dispatchFormAction}",
          "kcClsx": "kcClsx={kcClsx}",
          "i18n": "i18n={i18n}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_FieldErrors_1\""
    ],
    "historyStates": [
      {
        "tag": "FieldErrors",
        "currentIndex": "9",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_FieldErrors_1\"",
          "attribute": "attribute={attribute}",
          "displayableErrors": "displayableErrors={displayableErrors}",
          "kcClsx": "kcClsx={kcClsx}",
          "fieldIndex": "fieldIndex={undefined}"
        }
      }
    ]
  },
  {
    "tags": [
      "{`form-help-text-after-${attribute.name}`}"
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "10",
        "operation": "Loaded",
        "props": {
          "className": "className={kcClsx(\"kcInputHelperTextAfterClass\")}",
          "id": "id={`form-help-text-after-${attribute.name}`}",
          "aria-live": "aria-live=\"polite\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`form-help-text-after-${attribute.name}`}",
          "aria-live": "aria-live=\"polite\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id={`form-help-text-after-${attribute.name}`}",
          "aria-live": "aria-live=\"polite\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_AfterField_1\""
    ],
    "historyStates": [
      {
        "tag": "AfterField",
        "currentIndex": "11",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_AfterField_1\"",
          "attribute": "attribute={attribute}",
          "dispatchFormAction": "dispatchFormAction={dispatchFormAction}",
          "displayableErrors": "displayableErrors={displayableErrors}",
          "valueOrValues": "valueOrValues={valueOrValues}",
          "kcClsx": "kcClsx={kcClsx}",
          "i18n": "i18n={i18n}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_6\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "12",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_6\"",
          "className": "className={kcClsx(\"kcFormGroupClass\")}",
          "": ""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_6\"",
          "": ""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_6\"",
          "": ""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_7\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "13",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_7\"",
          "className": "className={kcClsx(\"kcContentWrapperClass\")}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_7\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_7\""
        }
      }
    ]
  },
  {
    "tags": [
      "{`header-${attribute.group.name}`}"
    ],
    "historyStates": [
      {
        "tag": "label",
        "currentIndex": "14",
        "operation": "Loaded",
        "props": {
          "id": "id={`header-${attribute.group.name}`}",
          "className": "className={kcClsx(\"kcFormGroupHeader\")}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`header-${attribute.group.name}`}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id={`header-${attribute.group.name}`}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_8\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "15",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_8\"",
          "className": "className={kcClsx(\"kcLabelWrapperClass\")}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_8\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_8\""
        }
      }
    ]
  },
  {
    "tags": [
      "{`description-${attribute.group.name}`}"
    ],
    "historyStates": [
      {
        "tag": "label",
        "currentIndex": "16",
        "operation": "Loaded",
        "props": {
          "id": "id={`description-${attribute.group.name}`}",
          "className": "className={kcClsx(\"kcLabelClass\")}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`description-${attribute.group.name}`}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id={`description-${attribute.group.name}`}"
        }
      }
    ]
  },
  {
    "tags": [
      "{`input-error-${attribute.name}${fieldIndex === undefined ? \" : `-${fieldIndex}`}`}"
    ],
    "historyStates": [
      {
        "tag": "span",
        "currentIndex": "17",
        "operation": "Loaded",
        "props": {
          "id": "id={`input-error-${attribute.name}${fieldIndex === undefined ? \"\" : `-${fieldIndex}`}`}",
          "className": "className={kcClsx(\"kcInputErrorMessageClass\")}",
          "aria-live": "aria-live=\"polite\""
        }
      },
      {
        "tag": "span",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`input-error-${attribute.name}${fieldIndex === undefined ? \"\" : `-${fieldIndex}`}`}",
          "aria-live": "aria-live=\"polite\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_Fragment_2\""
    ],
    "historyStates": [
      {
        "tag": "Fragment",
        "currentIndex": "18",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_Fragment_2\"",
          "key": "key={i}"
        }
      },
      {
        "tag": "Fragment",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_Fragment_2\"",
          "key": "key={i}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_br_1\""
    ],
    "historyStates": [
      {
        "tag": "br",
        "currentIndex": "19",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_br_1\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_TextareaTag_1\""
    ],
    "historyStates": [
      {
        "tag": "TextareaTag",
        "currentIndex": "20",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_TextareaTag_1\"",
          "": ""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_SelectTag_1\""
    ],
    "historyStates": [
      {
        "tag": "SelectTag",
        "currentIndex": "21",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_SelectTag_1\"",
          "": ""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_InputTagSelects_1\""
    ],
    "historyStates": [
      {
        "tag": "InputTagSelects",
        "currentIndex": "22",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_InputTagSelects_1\"",
          "": ""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_InputTag_1\""
    ],
    "historyStates": [
      {
        "tag": "InputTag",
        "currentIndex": "23",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_InputTag_1\"",
          "key": "key={i}",
          "": "",
          "fieldIndex": "fieldIndex={i}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_InputTag_2\""
    ],
    "historyStates": [
      {
        "tag": "InputTag",
        "currentIndex": "24",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_InputTag_2\"",
          "": "",
          "fieldIndex": "fieldIndex={undefined}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_PasswordWrapper_1\""
    ],
    "historyStates": [
      {
        "tag": "PasswordWrapper",
        "currentIndex": "25",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_PasswordWrapper_1\"",
          "kcClsx": "kcClsx={props.kcClsx}",
          "i18n": "i18n={props.i18n}",
          "passwordInputId": "passwordInputId={attribute.name}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_9\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "26",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_9\"",
          "className": "className={kcClsx(\"kcInputGroup\")}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_9\""
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_9\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_button_1\""
    ],
    "historyStates": [
      {
        "tag": "button",
        "currentIndex": "27",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_button_1\"",
          "type": "type=\"button\"",
          "className": "className={kcClsx(\"kcFormPasswordVisibilityButtonClass\")}",
          "aria-label": "aria-label={msgStr(isPasswordRevealed ? \"hidePassword\" : \"showPassword\")}",
          "aria-controls": "aria-controls={passwordInputId}",
          "onClick": "onClick={toggleIsPasswordRevealed}"
        }
      },
      {
        "tag": "button",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_button_1\"",
          "type": "type=\"button\"",
          "aria-label": "aria-label={msgStr(isPasswordRevealed ? \"hidePassword\" : \"showPassword\")}",
          "aria-controls": "aria-controls={passwordInputId}",
          "onClick": "onClick={toggleIsPasswordRevealed}"
        }
      },
      {
        "tag": "button",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_button_1\"",
          "type": "type=\"button\"",
          "aria-label": "aria-label={msgStr(isPasswordRevealed ? \"hidePassword\" : \"showPassword\")}",
          "aria-controls": "aria-controls={passwordInputId}",
          "onClick": "onClick={toggleIsPasswordRevealed}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_i_1\""
    ],
    "historyStates": [
      {
        "tag": "i",
        "currentIndex": "28",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_i_1\"",
          "className": "className={kcClsx(isPasswordRevealed ? \"kcFormPasswordVisibilityIconHide\" : \"kcFormPasswordVisibilityIconShow\")}",
          "aria-hidden": "aria-hidden"
        }
      },
      {
        "tag": "i",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_i_1\"",
          "aria-hidden": "aria-hidden"
        }
      }
    ]
  },
  {
    "tags": [
      "{attribute.name}"
    ],
    "historyStates": [
      {
        "tag": "select",
        "currentIndex": "38",
        "operation": "Loaded",
        "props": {
          "id": "id={attribute.name}",
          "name": "name={attribute.name}",
          "className": "className={kcClsx(\"kcInputClass\")}",
          "aria-invalid": "aria-invalid={displayableErrors.length !== 0}",
          "disabled": "disabled={attribute.readOnly}",
          "multiple": "multiple={isMultiple}",
          "size": "size={attribute.annotations.inputTypeSize === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeSize}`)}",
          "value": "value={valueOrValues}",
          "onChange": "onChange={event => dispatchFormAction({\n            action: \"update\",\n            name: attribute.name,\n            valueOrValues: (() => {\n                if (isMultiple) {\n                    return Array.from(event.target.selectedOptions).map(option => option.value);\n                }\n                return event.target.value;\n            })()\n        })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n            action: \"focus lost\",\n            name: attribute.name,\n            fieldIndex: undefined\n        })}"
        }
      },
      {
        "tag": "input",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "type": "type={(() => {\n            const { inputType } = attribute.annotations;\n            if (inputType?.startsWith(\"html5-\")) {\n                return inputType.slice(6);\n            }\n            return inputType ?? \"text\";\n        })()}",
          "id": "id={attribute.name}",
          "name": "name={attribute.name}",
          "value": "value={(() => {\n            if (fieldIndex !== undefined) {\n                assert(valueOrValues instanceof Array);\n                return valueOrValues[fieldIndex];\n            }\n            assert(typeof valueOrValues === \"string\");\n            return valueOrValues;\n        })()}",
          "aria-invalid": "aria-invalid={displayableErrors.find(error => error.fieldIndex === fieldIndex) !== undefined}",
          "disabled": "disabled={attribute.readOnly}",
          "autoComplete": "autoComplete={attribute.autocomplete}",
          "placeholder": "placeholder={attribute.annotations.inputTypePlaceholder === undefined ? undefined : advancedMsgStr(attribute.annotations.inputTypePlaceholder)}",
          "pattern": "pattern={attribute.annotations.inputTypePattern}",
          "size": "size={attribute.annotations.inputTypeSize === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeSize}`)}",
          "maxLength": "maxLength={attribute.annotations.inputTypeMaxlength === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeMaxlength}`)}",
          "minLength": "minLength={attribute.annotations.inputTypeMinlength === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeMinlength}`)}",
          "max": "max={attribute.annotations.inputTypeMax}",
          "min": "min={attribute.annotations.inputTypeMin}",
          "step": "step={attribute.annotations.inputTypeStep}",
          "": "",
          "onChange": "onChange={event => dispatchFormAction({\n            action: \"update\",\n            name: attribute.name,\n            valueOrValues: (() => {\n                if (fieldIndex !== undefined) {\n                    assert(valueOrValues instanceof Array);\n                    return valueOrValues.map((value, i) => {\n                        if (i === fieldIndex) {\n                            return event.target.value;\n                        }\n                        return value;\n                    });\n                }\n                return event.target.value;\n            })()\n        })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n            action: \"focus lost\",\n            name: attribute.name,\n            fieldIndex: fieldIndex\n        })}"
        }
      },
      {
        "tag": "textarea",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={attribute.name}",
          "name": "name={attribute.name}",
          "aria-invalid": "aria-invalid={displayableErrors.length !== 0}",
          "disabled": "disabled={attribute.readOnly}",
          "cols": "cols={attribute.annotations.inputTypeCols === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeCols}`)}",
          "rows": "rows={attribute.annotations.inputTypeRows === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeRows}`)}",
          "maxLength": "maxLength={attribute.annotations.inputTypeMaxlength === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeMaxlength}`)}",
          "value": "value={value}",
          "onChange": "onChange={event => dispatchFormAction({\n            action: \"update\",\n            name: attribute.name,\n            valueOrValues: event.target.value\n        })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n            action: \"focus lost\",\n            name: attribute.name,\n            fieldIndex: undefined\n        })}"
        }
      },
      {
        "tag": "select",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={attribute.name}",
          "name": "name={attribute.name}",
          "aria-invalid": "aria-invalid={displayableErrors.length !== 0}",
          "disabled": "disabled={attribute.readOnly}",
          "multiple": "multiple={isMultiple}",
          "size": "size={attribute.annotations.inputTypeSize === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeSize}`)}",
          "value": "value={valueOrValues}",
          "onChange": "onChange={event => dispatchFormAction({\n            action: \"update\",\n            name: attribute.name,\n            valueOrValues: (() => {\n                if (isMultiple) {\n                    return Array.from(event.target.selectedOptions).map(option => option.value);\n                }\n                return event.target.value;\n            })()\n        })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n            action: \"focus lost\",\n            name: attribute.name,\n            fieldIndex: undefined\n        })}"
        }
      },
      {
        "tag": "input",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "type": "type={(() => {\n            const { inputType } = attribute.annotations;\n            if (inputType?.startsWith(\"html5-\")) {\n                return inputType.slice(6);\n            }\n            return inputType ?? \"text\";\n        })()}",
          "id": "id={attribute.name}",
          "name": "name={attribute.name}",
          "value": "value={(() => {\n            if (fieldIndex !== undefined) {\n                assert(valueOrValues instanceof Array);\n                return valueOrValues[fieldIndex];\n            }\n            assert(typeof valueOrValues === \"string\");\n            return valueOrValues;\n        })()}",
          "aria-invalid": "aria-invalid={displayableErrors.find(error => error.fieldIndex === fieldIndex) !== undefined}",
          "disabled": "disabled={attribute.readOnly}",
          "autoComplete": "autoComplete={attribute.autocomplete}",
          "placeholder": "placeholder={attribute.annotations.inputTypePlaceholder === undefined ? undefined : advancedMsgStr(attribute.annotations.inputTypePlaceholder)}",
          "pattern": "pattern={attribute.annotations.inputTypePattern}",
          "size": "size={attribute.annotations.inputTypeSize === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeSize}`)}",
          "maxLength": "maxLength={attribute.annotations.inputTypeMaxlength === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeMaxlength}`)}",
          "minLength": "minLength={attribute.annotations.inputTypeMinlength === undefined ? undefined : parseInt(`${attribute.annotations.inputTypeMinlength}`)}",
          "max": "max={attribute.annotations.inputTypeMax}",
          "min": "min={attribute.annotations.inputTypeMin}",
          "step": "step={attribute.annotations.inputTypeStep}",
          "": "",
          "onChange": "onChange={event => dispatchFormAction({\n            action: \"update\",\n            name: attribute.name,\n            valueOrValues: (() => {\n                if (fieldIndex !== undefined) {\n                    assert(valueOrValues instanceof Array);\n                    return valueOrValues.map((value, i) => {\n                        if (i === fieldIndex) {\n                            return event.target.value;\n                        }\n                        return value;\n                    });\n                }\n                return event.target.value;\n            })()\n        })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n            action: \"focus lost\",\n            name: attribute.name,\n            fieldIndex: fieldIndex\n        })}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_FieldErrors_2\""
    ],
    "historyStates": [
      {
        "tag": "FieldErrors",
        "currentIndex": "30",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_FieldErrors_2\"",
          "attribute": "attribute={attribute}",
          "kcClsx": "kcClsx={kcClsx}",
          "displayableErrors": "displayableErrors={displayableErrors}",
          "fieldIndex": "fieldIndex={fieldIndex}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_AddRemoveButtonsMultiValuedAttribute_1\""
    ],
    "historyStates": [
      {
        "tag": "AddRemoveButtonsMultiValuedAttribute",
        "currentIndex": "31",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_AddRemoveButtonsMultiValuedAttribute_1\"",
          "attribute": "attribute={attribute}",
          "values": "values={values}",
          "fieldIndex": "fieldIndex={fieldIndex}",
          "dispatchFormAction": "dispatchFormAction={dispatchFormAction}",
          "i18n": "i18n={i18n}"
        }
      }
    ]
  },
  {
    "tags": [
      "{`kc-remove${idPostfix}`}"
    ],
    "historyStates": [
      {
        "tag": "button",
        "currentIndex": "32",
        "operation": "Loaded",
        "props": {
          "id": "id={`kc-remove${idPostfix}`}",
          "type": "type=\"button\"",
          "className": "className=\"pf-c-button pf-m-inline pf-m-link\"",
          "onClick": "onClick={() => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: values.filter((_, i) => i !== fieldIndex)\n            })}"
        }
      },
      {
        "tag": "button",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`kc-remove${idPostfix}`}",
          "type": "type=\"button\"",
          "onClick": "onClick={() => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: values.filter((_, i) => i !== fieldIndex)\n            })}"
        }
      },
      {
        "tag": "button",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id={`kc-remove${idPostfix}`}",
          "type": "type=\"button\"",
          "onClick": "onClick={() => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: values.filter((_, i) => i !== fieldIndex)\n            })}"
        }
      }
    ]
  },
  {
    "tags": [
      "{`kc-add${idPostfix}`}"
    ],
    "historyStates": [
      {
        "tag": "button",
        "currentIndex": "33",
        "operation": "Loaded",
        "props": {
          "id": "id={`kc-add${idPostfix}`}",
          "type": "type=\"button\"",
          "className": "className=\"pf-c-button pf-m-inline pf-m-link\"",
          "onClick": "onClick={() => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: [...values, \"\"]\n            })}"
        }
      },
      {
        "tag": "button",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id={`kc-add${idPostfix}`}",
          "type": "type=\"button\"",
          "onClick": "onClick={() => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: [...values, \"\"]\n            })}"
        }
      },
      {
        "tag": "button",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id={`kc-add${idPostfix}`}",
          "type": "type=\"button\"",
          "onClick": "onClick={() => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: [...values, \"\"]\n            })}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_div_10\""
    ],
    "historyStates": [
      {
        "tag": "div",
        "currentIndex": "34",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_div_10\"",
          "key": "key={option}",
          "className": "className={classDiv}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_div_10\"",
          "key": "key={option}"
        }
      },
      {
        "tag": "div",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_div_10\"",
          "key": "key={option}"
        }
      }
    ]
  },
  {
    "tags": [
      "{`${attribute.name}-${option}`}"
    ],
    "historyStates": [
      {
        "tag": "input",
        "currentIndex": "35",
        "operation": "Loaded",
        "props": {
          "type": "type={inputType}",
          "id": "id={`${attribute.name}-${option}`}",
          "name": "name={attribute.name}",
          "value": "value={option}",
          "className": "className={classInput}",
          "aria-invalid": "aria-invalid={props.displayableErrors.length !== 0}",
          "disabled": "disabled={attribute.readOnly}",
          "checked": "checked={valueOrValues instanceof Array ? valueOrValues.includes(option) : valueOrValues === option}",
          "onChange": "onChange={event => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: (() => {\n                    const isChecked = event.target.checked;\n                    if (valueOrValues instanceof Array) {\n                        const newValues = [...valueOrValues];\n                        if (isChecked) {\n                            newValues.push(option);\n                        }\n                        else {\n                            newValues.splice(newValues.indexOf(option), 1);\n                        }\n                        return newValues;\n                    }\n                    return event.target.checked ? option : \"\";\n                })()\n            })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n                action: \"focus lost\",\n                name: attribute.name,\n                fieldIndex: undefined\n            })}"
        }
      },
      {
        "tag": "input",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "type": "type={inputType}",
          "id": "id={`${attribute.name}-${option}`}",
          "name": "name={attribute.name}",
          "value": "value={option}",
          "aria-invalid": "aria-invalid={props.displayableErrors.length !== 0}",
          "disabled": "disabled={attribute.readOnly}",
          "checked": "checked={valueOrValues instanceof Array ? valueOrValues.includes(option) : valueOrValues === option}",
          "onChange": "onChange={event => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: (() => {\n                    const isChecked = event.target.checked;\n                    if (valueOrValues instanceof Array) {\n                        const newValues = [...valueOrValues];\n                        if (isChecked) {\n                            newValues.push(option);\n                        }\n                        else {\n                            newValues.splice(newValues.indexOf(option), 1);\n                        }\n                        return newValues;\n                    }\n                    return event.target.checked ? option : \"\";\n                })()\n            })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n                action: \"focus lost\",\n                name: attribute.name,\n                fieldIndex: undefined\n            })}"
        }
      },
      {
        "tag": "input",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "type": "type={inputType}",
          "id": "id={`${attribute.name}-${option}`}",
          "name": "name={attribute.name}",
          "value": "value={option}",
          "aria-invalid": "aria-invalid={props.displayableErrors.length !== 0}",
          "disabled": "disabled={attribute.readOnly}",
          "checked": "checked={valueOrValues instanceof Array ? valueOrValues.includes(option) : valueOrValues === option}",
          "onChange": "onChange={event => dispatchFormAction({\n                action: \"update\",\n                name: attribute.name,\n                valueOrValues: (() => {\n                    const isChecked = event.target.checked;\n                    if (valueOrValues instanceof Array) {\n                        const newValues = [...valueOrValues];\n                        if (isChecked) {\n                            newValues.push(option);\n                        }\n                        else {\n                            newValues.splice(newValues.indexOf(option), 1);\n                        }\n                        return newValues;\n                    }\n                    return event.target.checked ? option : \"\";\n                })()\n            })}",
          "onBlur": "onBlur={() => dispatchFormAction({\n                action: \"focus lost\",\n                name: attribute.name,\n                fieldIndex: undefined\n            })}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_label_4\""
    ],
    "historyStates": [
      {
        "tag": "label",
        "currentIndex": "36",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_label_4\"",
          "htmlFor": "htmlFor={`${attribute.name}-${option}`}",
          "className": "className={`${classLabel}${attribute.readOnly ? ` ${kcClsx(\"kcInputClassRadioCheckboxLabelDisabled\")}` : \"\"}`}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "StyleRemoved",
        "props": {
          "id": "id=\"UserProfileFormFields_label_4\"",
          "htmlFor": "htmlFor={`${attribute.name}-${option}`}"
        }
      },
      {
        "tag": "label",
        "currentIndex": "NOT_CHANGED",
        "operation": "TagReplaced",
        "props": {
          "id": "id=\"UserProfileFormFields_label_4\"",
          "htmlFor": "htmlFor={`${attribute.name}-${option}`}"
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_option_1\""
    ],
    "historyStates": [
      {
        "tag": "option",
        "currentIndex": "39",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_option_1\"",
          "value": "value=\"\""
        }
      }
    ]
  },
  {
    "tags": [
      "UserProfileFormFields_option_2\""
    ],
    "historyStates": [
      {
        "tag": "option",
        "currentIndex": "40",
        "operation": "Loaded",
        "props": {
          "id": "id=\"UserProfileFormFields_option_2\"",
          "key": "key={option}",
          "value": "value={option}"
        }
      }
    ]
  }
]